{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploy Azure networking infrastructure with VNet, subnets, NSGs, and load balancer",
    "author": "Azure Marketplace Generator"
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "myVNet",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address prefix for the subnet"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "myNSG",
      "metadata": {
        "description": "Name of the network security group"
      }
    },
    "enableDdosProtection": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable DDoS protection for the virtual network"
      }
    },
    "enableVmProtection": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable VM protection"
      }
    },
    "createLoadBalancer": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create a load balancer"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "myLoadBalancer",
      "metadata": {
        "description": "Name of the load balancer"
      }
    },
    "publicIpName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Name of the public IP address"
      }
    },
    "allowedSshSourcePrefix": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Source address prefix for SSH access"
      }
    },
    "allowedHttpSourcePrefix": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Source address prefix for HTTP access"
      }
    }
  },
  "variables": {
    "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]",
    "publicIpId": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
    "loadBalancerFrontEndName": "LoadBalancerFrontEnd",
    "loadBalancerBackEndName": "LoadBalancerBackEnd",
    "loadBalancerProbeName": "loadBalancerHealthProbe"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[parameters('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowSSH",
            "properties": {
              "description": "Allow SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('allowedSshSourcePrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTP",
            "properties": {
              "description": "Allow HTTP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "[parameters('allowedHttpSourcePrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPS",
            "properties": {
              "description": "Allow HTTPS traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('allowedHttpSourcePrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1002,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAll",
            "properties": {
              "description": "Deny all other inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "enableDdosProtection": "[parameters('enableDdosProtection')]",
        "enableVmProtection": "[parameters('enableVmProtection')]",
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgId')]"
              },
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('createLoadBalancer')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[parameters('publicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('publicIpName'), '-', uniqueString(resourceGroup().id)))]"
        }
      }
    },
    {
      "condition": "[parameters('createLoadBalancer')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-05-01",
      "name": "[parameters('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIpId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackEndName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackEndName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', variables('loadBalancerProbeName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default"
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('loadBalancerProbeName')]",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "requestPath": "/",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "outboundRules": [],
        "inboundNatPools": []
      }
    }
  ],
  "outputs": {
    "vnetName": {
      "type": "string",
      "value": "[parameters('vnetName')]"
    },
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    },
    "subnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
    },
    "nsgId": {
      "type": "string",
      "value": "[variables('nsgId')]"
    },
    "publicIpAddress": {
      "condition": "[parameters('createLoadBalancer')]",
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))).ipAddress]"
    },
    "loadBalancerId": {
      "condition": "[parameters('createLoadBalancer')]",
      "type": "string",
      "value": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]"
    },
    "fqdn": {
      "condition": "[parameters('createLoadBalancer')]",
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))).dnsSettings.fqdn]"
    }
  }
}