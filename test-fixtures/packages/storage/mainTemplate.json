{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploy Azure Storage Account with multiple service types and security configurations",
    "author": "Azure Marketplace Generator"
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "maxLength": 24,
      "minLength": 3,
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS"
      ],
      "metadata": {
        "description": "Storage account SKU"
      }
    },
    "accessTier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "Access tier for blob storage"
      }
    },
    "enableHttpsTrafficOnly": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable HTTPS-only traffic"
      }
    },
    "minimumTlsVersion": {
      "type": "string",
      "defaultValue": "TLS1_2",
      "allowedValues": [
        "TLS1_0",
        "TLS1_1",
        "TLS1_2"
      ],
      "metadata": {
        "description": "Minimum TLS version"
      }
    },
    "enableBlobPublicAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Allow public access to blobs"
      }
    },
    "enableFileShares": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Azure Files"
      }
    },
    "enableBlobVersioning": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable blob versioning"
      }
    },
    "enableDeleteRetention": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable blob delete retention"
      }
    },
    "deleteRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "minValue": 1,
      "maxValue": 365,
      "metadata": {
        "description": "Number of days to retain deleted blobs"
      }
    }
  },
  "variables": {
    "storageAccountName": "[toLower(parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "[parameters('accessTier')]",
        "supportsHttpsTrafficOnly": "[parameters('enableHttpsTrafficOnly')]",
        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
        "allowBlobPublicAccess": "[parameters('enableBlobPublicAccess')]",
        "isHnsEnabled": false,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "containerDeleteRetentionPolicy": {
          "enabled": "[parameters('enableDeleteRetention')]",
          "days": "[parameters('deleteRetentionDays')]"
        },
        "deleteRetentionPolicy": {
          "enabled": "[parameters('enableDeleteRetention')]",
          "days": "[parameters('deleteRetentionDays')]"
        },
        "isVersioningEnabled": "[parameters('enableBlobVersioning')]",
        "changeFeed": {
          "enabled": false
        },
        "restorePolicy": {
          "enabled": false
        }
      }
    },
    {
      "condition": "[parameters('enableFileShares')]",
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareDeleteRetentionPolicy": {
          "enabled": "[parameters('enableDeleteRetention')]",
          "days": "[parameters('deleteRetentionDays')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/documents')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None",
        "metadata": {
          "purpose": "Document storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None",
        "metadata": {
          "purpose": "Log storage"
        }
      }
    },
    {
      "condition": "[parameters('enableFileShares')]",
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('storageAccountName'), '/default/fileshare')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB",
        "metadata": {
          "purpose": "File sharing"
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "primaryEndpoints": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints]"
    },
    "storageAccountKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value]"
    },
    "connectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
    }
  }
}