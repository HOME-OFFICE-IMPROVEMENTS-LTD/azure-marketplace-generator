{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "azmp-plugin-vm",
      "version": "2.0.0"
    },
    "description": "Azure Marketplace VM deployment template",
    "author": "HOME OFFICE IMPROVEMENTS LTD"
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "minimal-vm",
      "metadata": {
        "description": "Name of the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Administrator username for the VM"
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "Size of the virtual machine"
      }
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Whether to create new or use existing virtual network"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of the virtual network"
      }
    },
    "publicIPAddressNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Whether to create new, use existing, or no public IP"
      }
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of the public IP address"
      }
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Public IP allocation method"
      }
    },
    "publicIPSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "Public IP SKU"
      }
    },
    "installExtensions": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to install VM extensions"
      }
    },
    "installCustomScriptExtension": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to install Custom Script Extension"
      }
    },
    "installMonitoringExtension": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to install Azure Monitor Agent"
      }
    },
    "installSecurityExtension": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to install Azure Security Agent"
      }
    },
    "installAntimalwareExtension": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to install Windows Antimalware Extension (Windows only)"
      }
    }
  },
  "variables": {
    "vmName": "[parameters('vmName')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "sku": {
          "name": "[parameters('publicIPSku')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-04-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osImageReference')]",
          "osDisk": {
            "name": "[variables('osDiskName')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "vmName": {
      "type": "string",
      "value": "[variables('vmName')]"
    },
    "publicIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).ipAddress]"
    },
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "extensionsInstalled": {
      "type": "array",
      "value": "[if(parameters('installExtensions'), union(if(parameters('installCustomScriptExtension'), array('CustomScript'), createArray()), if(parameters('installMonitoringExtension'), array('MonitoringAgent'), createArray()), if(parameters('installSecurityExtension'), array('SecurityAgent'), createArray()), if(and(parameters('installAntimalwareExtension'), equals(parameters('osType'), 'Windows')), array('Antimalware'), createArray())), createArray())]"
    },
    "vmResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
    },
    "virtualNetworkNewOrExisting": {
      "type": "string",
      "value": "[parameters('virtualNetworkNewOrExisting')]"
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "value": "[parameters('virtualNetworkResourceGroup')]"
    },
    "publicIPAddressNewOrExisting": {
      "type": "string",
      "value": "[parameters('publicIPAddressNewOrExisting')]"
    },
    "publicIPAddressResourceGroup": {
      "type": "string",
      "value": "[parameters('publicIPAddressResourceGroup')]"
    }
  }
}