{
    "$schema": "{{armSchemaUrl}}",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "Azure Marketplace Generator",
            "version": "0.1.0"
        },
        "description": "Storage Account nested template for {{name}}"
    },
    "parameters": {
        "storageAccountNamePrefix": {
            "type": "string",
            "maxLength": 11,
            "metadata": {
                "description": "Prefix for the storage account name"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS", 
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage account type and replication"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the storage account"
            }
        },
        "allowBlobPublicAccess": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. Secure by default."
            }
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2",
            "allowedValues": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
            ],
            "metadata": {
                "description": "The minimum TLS version permitted on requests to storage. TLS 1.2 is recommended."
            }
        },
        "supportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Allows HTTPS traffic only to storage service if set to true. Secure by default."
            }
        },
        "publicNetworkAccess": {
            "type": "string",
            "defaultValue": "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Allow or disallow public network access to storage account. Set to Disabled for private endpoint only access."
            }
        },
        "defaultToOAuthAuthentication": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "A boolean flag which indicates whether the default authentication is OAuth or not."
            }
        },
        "allowSharedKeyAccess": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. WARNING: Disabling Shared Key auth (recommended for compliance) requires Azure AD authentication."
            }
        },
        "requireInfrastructureEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
            }
        },
        "enableStaticWebsite": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable static website hosting"
            }
        },
        "enableTables": {
            "type": "bool", 
            "defaultValue": false,
            "metadata": {
                "description": "Enable Table storage for NoSQL database functionality"
            }
        },
        "enableQueues": {
            "type": "bool",
            "defaultValue": false, 
            "metadata": {
                "description": "Enable Queue storage for message processing"
            }
        },
        "enableFileShares": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable File storage for network drive functionality"
            }
        },
        "websiteIndexDocument": {
            "type": "string",
            "defaultValue": "index.html",
            "metadata": {
                "description": "Index document for static website"
            }
        },
        "websiteErrorDocument": {
            "type": "string", 
            "defaultValue": "404.html",
            "metadata": {
                "description": "Error document for static website"
            }
        },
        "enableEventGrid": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable Event Grid for storage automation workflows"
            }
        },
        "eventGridSubscriptionName": {
            "type": "string",
            "defaultValue": "storage-automation",
            "metadata": {
                "description": "Name for the Event Grid subscription"
            }
        },
        "webhookEndpoint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Webhook endpoint URL for Event Grid notifications (optional)"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "encryption": {
                    "requireInfrastructureEncryption": "[parameters('requireInfrastructureEncryption')]",
                    "services": {
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "file": {
                            "keyType": "Account", 
                            "enabled": "[parameters('enableFileShares')]"
                        },
                        "table": {
                            "keyType": "Account",
                            "enabled": "[parameters('enableTables')]"
                        },
                        "queue": {
                            "keyType": "Account", 
                            "enabled": "[parameters('enableQueues')]"
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                }{{#if enableStaticWebsite}},
                "staticWebsite": {
                    "enabled": "[parameters('enableStaticWebsite')]",
                    "indexDocument": "[parameters('websiteIndexDocument')]", 
                    "errorDocument404Path": "[parameters('websiteErrorDocument')]"
                }{{/if}}
            },
            "tags": {
                "CreatedBy": "Azure Marketplace Generator",
                "Publisher": "{{publisher}}",
                "Application": "{{name}}"
            }
        },
        {
            "condition": "[parameters('enableEventGrid')]",
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "{{latestApiVersion 'Microsoft.EventGrid/systemTopics'}}",
            "name": "[concat(variables('storageAccountName'), '-events')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            },
            "tags": {
                "CreatedBy": "Azure Marketplace Generator",
                "Publisher": "{{publisher}}",
                "Application": "{{name}}",
                "Purpose": "Storage Events Automation"
            }
        },
        {
            "condition": "[and(parameters('enableEventGrid'), not(equals(parameters('webhookEndpoint'), '')))]",
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "{{latestApiVersion 'Microsoft.EventGrid/systemTopics/eventSubscriptions'}}",
            "name": "[concat(variables('storageAccountName'), '-events/', parameters('eventGridSubscriptionName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', concat(variables('storageAccountName'), '-events'))]"
            ],
            "properties": {
                "destination": {
                    "endpointType": "WebHook",
                    "properties": {
                        "endpointUrl": "[parameters('webhookEndpoint')]"
                    }
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated",
                        "Microsoft.Storage.BlobDeleted",
                        "Microsoft.Storage.BlobTierChanged"
                    ],
                    "subjectBeginsWith": "/blobServices/default/containers/",
                    "subjectEndsWith": "",
                    "isSubjectCaseSensitive": false
                },
                "labels": [
                    "storage-automation",
                    "file-processing",
                    "{{name}}"
                ],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 3,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "condition": "[parameters('enableFileShares')]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "{{latestApiVersion 'Microsoft.Storage/storageAccounts/fileServices'}}",
            "name": "[concat(variables('storageAccountName'), '/default/application-data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "shareQuota": 5120,
                "enabledProtocols": "SMB",
                "metadata": {
                    "description": "Default file share for application data",
                    "createdBy": "Azure Marketplace Generator"
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]",
            "metadata": {
                "description": "Name of the created storage account"
            }
        },
        "storageEndpoint": {
            "type": "string",
            "value": "[reference(variables('storageAccountName'), '{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}').primaryEndpoints.blob]",
            "metadata": {
                "description": "Primary blob endpoint URL"
            }
        },
        "storageAccountId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "metadata": {
                "description": "Resource ID of the storage account"
            }
        },

        "staticWebsiteUrl": {
            "condition": "[parameters('enableStaticWebsite')]",
            "type": "string",
            "value": "[reference(variables('storageAccountName'), '{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}').primaryEndpoints.web]",
            "metadata": {
                "description": "Static website primary endpoint URL"
            }
        },
        "tableEndpoint": {
            "condition": "[parameters('enableTables')]",
            "type": "string",
            "value": "[reference(variables('storageAccountName'), '{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}').primaryEndpoints.table]",
            "metadata": {
                "description": "Table storage endpoint URL"
            }
        },
        "queueEndpoint": {
            "condition": "[parameters('enableQueues')]",
            "type": "string", 
            "value": "[reference(variables('storageAccountName'), '{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}').primaryEndpoints.queue]",
            "metadata": {
                "description": "Queue storage endpoint URL"
            }
        },
        "fileEndpoint": {
            "condition": "[parameters('enableFileShares')]",
            "type": "string",
            "value": "[reference(variables('storageAccountName'), '{{latestApiVersion 'Microsoft.Storage/storageAccounts'}}').primaryEndpoints.file]",
            "metadata": {
                "description": "File storage endpoint URL"
            }
        },
        "enabledServices": {
            "type": "object",
            "value": {
                "staticWebsite": "[parameters('enableStaticWebsite')]",
                "tables": "[parameters('enableTables')]", 
                "queues": "[parameters('enableQueues')]",
                "fileShares": "[parameters('enableFileShares')]",
                "eventGrid": "[parameters('enableEventGrid')]"
            },
            "metadata": {
                "description": "Summary of enabled storage services"
            }
        },
        "eventGridTopicId": {
            "condition": "[parameters('enableEventGrid')]",
            "type": "string",
            "value": "[resourceId('Microsoft.EventGrid/systemTopics', concat(variables('storageAccountName'), '-events'))]",
            "metadata": {
                "description": "Resource ID of the Event Grid system topic"
            }
        },
        "eventGridTopicEndpoint": {
            "condition": "[parameters('enableEventGrid')]",
            "type": "string",
            "value": "[reference(resourceId('Microsoft.EventGrid/systemTopics', concat(variables('storageAccountName'), '-events')), '{{latestApiVersion 'Microsoft.EventGrid/systemTopics'}}').metricResourceId]",
            "metadata": {
                "description": "Event Grid topic endpoint for monitoring"
            }
        },
        "eventGridSubscriptionId": {
            "condition": "[and(parameters('enableEventGrid'), not(equals(parameters('webhookEndpoint'), '')))]",
            "type": "string", 
            "value": "[resourceId('Microsoft.EventGrid/systemTopics/eventSubscriptions', concat(variables('storageAccountName'), '-events'), parameters('eventGridSubscriptionName'))]",
            "metadata": {
                "description": "Resource ID of the Event Grid subscription"
            }
        }
    }
}