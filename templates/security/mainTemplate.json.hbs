{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "{{publisher}} Azure Marketplace Generator",
      "version": "1.1.0",
      "templateHash": "{{uniqueString}}"
    },
    "description": "üõ°Ô∏è AI-Enhanced Enterprise Security Platform - {{name}}",
    "author": "{{publisher}}",
    "category": "Security + Identity",
    "aiEnhanced": true,
    "complianceLevel": "Enterprise"
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "üåç Location for all resources"
      }
    },
    "applicationName": {
      "type": "string",
      "defaultValue": "{{name}}",
      "metadata": {
        "description": "üéØ Name of the security application platform"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "production",
      "allowedValues": [
        "development",
        "staging",
        "production"
      ],
      "metadata": {
        "description": "üåç Deployment environment (affects security policies)"
      }
    },
    "complianceFramework": {
      "type": "string",
      "defaultValue": "SOC2",
      "allowedValues": [
        "SOC2",
        "GDPR",
        "HIPAA",
        "PCI-DSS",
        "ISO27001"
      ],
      "metadata": {
        "description": "üèõÔ∏è Primary compliance framework for security controls"
      }
    },
    "enableAdvancedThreatProtection": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "üõ°Ô∏è Enable advanced threat protection and monitoring"
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "premium",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "üîê Azure Key Vault SKU (Premium recommended for production)"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat(parameters('applicationName'), '-', parameters('environment'))]",
    "keyVaultName": "[concat(variables('resourcePrefix'), '-kv-', uniqueString(resourceGroup().id))]",
    "logAnalyticsWorkspaceName": "[concat(variables('resourcePrefix'), '-law-', uniqueString(resourceGroup().id))]",
    "managedIdentityName": "[concat(variables('resourcePrefix'), '-mi')]",
    "networkSecurityGroupName": "[concat(variables('resourcePrefix'), '-nsg')]",
    "storageAccountName": "[concat(replace(variables('resourcePrefix'), '-', ''), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2024-11-30",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]",
      "metadata": {
        "description": "üîë Managed identity for secure resource access"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2025-02-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[if(equals(parameters('environment'), 'production'), 365, 90)]",
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      },
      "metadata": {
        "description": "üìä Log Analytics workspace for security monitoring"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2025-05-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSku')]"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enablePurgeProtection": "[if(equals(parameters('environment'), 'production'), true, false)]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        }
      },
      "metadata": {
        "description": "üîê Enterprise Key Vault with advanced security controls"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-10-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "DenyAllInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "metadata": {
        "description": "üõ°Ô∏è Network Security Group with default deny-all rules"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2024-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ],
      "sku": {
        "name": "Standard_ZRS"
      },
      "kind": "StorageV2",
      "properties": {
        "defaultToOAuthAuthentication": true,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        },
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "metadata": {
        "description": "üíæ Secure storage account with enterprise encryption"
      }
    }
  ],
  "outputs": {
    "location": {
      "type": "string",
      "value": "[parameters('location')]",
      "metadata": {
        "description": "üåç Deployed location"
      }
    },
    "securityPlatformId": {
      "type": "string",
      "value": "[resourceGroup().id]",
      "metadata": {
        "description": "üÜî Security platform resource group identifier"
      }
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))).vaultUri]",
      "metadata": {
        "description": "üîê Key Vault URI for secure access"
      }
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
      "metadata": {
        "description": "üîë Managed Identity Principal ID for role assignments"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))).customerId]",
      "metadata": {
        "description": "üìä Log Analytics workspace ID for monitoring integration"
      }
    },
    "complianceStatus": {
      "type": "object",
      "value": {
        "framework": "[parameters('complianceFramework')]",
        "environment": "[parameters('environment')]",
        "advancedThreatProtection": "[parameters('enableAdvancedThreatProtection')]",
        "encryptionEnabled": true,
        "rbacEnabled": true,
        "networkIsolated": true
      },
      "metadata": {
        "description": "‚úÖ Compliance status and security posture summary"
      }
    }
  }
}